name: 'Google Chat Notification'
description: 'Send build status notifications to Google Chat with card format'
author: 'shreyngd'

inputs:
  google_chat_token:
    description: 'Google Chat webhook token (the part after /v1/spaces/.../messages?key=)'
    required: true
  space_id:
    description: 'Google Chat space ID'
    required: true
  status:
    description: 'Build status (success, failure, cancelled, skipped)'
    required: true
    default: ${{ job.status }}
  job_name:
    description: 'Job name to display in the notification'
    required: false
    default: ${{ github.job }}
  actor:
    description: 'User who triggered the build'
    required: false
    default: ${{ github.actor }}
  repository:
    description: 'Repository name'
    required: false
    default: ${{ github.repository }}
  branch:
    description: 'Branch name'
    required: false
    default: ${{ github.ref_name }}
  commit_sha:
    description: 'Commit SHA'
    required: false
    default: ${{ github.sha }}
  failure_reason:
    description: 'Failure reason for failed builds'
    required: false
    default: 'Build failed'

runs:
  using: "composite"
  steps:
    - name: Get commit messages
      id: get_commits
      shell: bash
      run: |
        if [[ "${{ inputs.status }}" == "success" ]]; then
          # Get commit messages from the push event or last commit
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # For push events, get commits from the event
            COMMITS=$(echo '${{ toJson(github.event.commits) }}' | jq -r '.[].message' | head -5 | sed 's/"/\\"/g' | awk '{printf "%s\\n", $0}')
          else
            # For other events, get the last commit message
            COMMITS=$(git log -1 --pretty=format:"%s" | sed 's/"/\\"/g')
          fi
          echo "commit_messages=$COMMITS" >> $GITHUB_OUTPUT
        fi

    - name: Format card color
      id: format_color
      shell: bash
      run: |
        case "${{ inputs.status }}" in
          success)
            echo "color=#28a745" >> $GITHUB_OUTPUT
            echo "status_icon=✅" >> $GITHUB_OUTPUT
            ;;
          failure)
            echo "color=#dc3545" >> $GITHUB_OUTPUT
            echo "status_icon=❌" >> $GITHUB_OUTPUT
            ;;
          cancelled)
            echo "color=#6c757d" >> $GITHUB_OUTPUT
            echo "status_icon=⏹️" >> $GITHUB_OUTPUT
            ;;
          skipped)
            echo "color=#ffc107" >> $GITHUB_OUTPUT
            echo "status_icon=⏭️" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "color=#007bff" >> $GITHUB_OUTPUT
            echo "status_icon=ℹ️" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Send Google Chat notification
      shell: bash
      env:
        GOOGLE_CHAT_TOKEN: ${{ inputs.google_chat_token }}
        SPACE_ID: ${{ inputs.space_id }}
        STATUS: ${{ inputs.status }}
        JOB_NAME: ${{ inputs.job_name }}
        ACTOR: ${{ inputs.actor }}
        REPOSITORY: ${{ inputs.repository }}
        BRANCH: ${{ inputs.branch }}
        COMMIT_SHA: ${{ inputs.commit_sha }}
        FAILURE_REASON: ${{ inputs.failure_reason }}
        COMMIT_MESSAGES: ${{ steps.get_commits.outputs.commit_messages }}
        COLOR: ${{ steps.format_color.outputs.color }}
        STATUS_ICON: ${{ steps.format_color.outputs.status_icon }}
        RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: |
        # Create the card payload based on status
        if [[ "$STATUS" == "success" ]]; then
          CARD_CONTENT=$(cat <<EOF
        {
          "cardsV2": [{
            "cardId": "build-notification",
            "card": {
              "header": {
                "title": "$STATUS_ICON Build Successful",
                "subtitle": "$REPOSITORY"
              },
              "sections": [{
                "header": "Build Details",
                "widgets": [
                  {
                    "decoratedText": {
                      "icon": {"knownIcon": "PERSON"},
                      "topLabel": "Triggered by",
                      "text": "$ACTOR"
                    }
                  },
                  {
                    "decoratedText": {
                      "icon": {"knownIcon": "BOOKMARK"},
                      "topLabel": "Job",
                      "text": "$JOB_NAME"
                    }
                  },
                  {
                    "decoratedText": {
                      "icon": {"materialIcon": {"name": "branch_right"}},
                      "topLabel": "Branch",
                      "text": "$BRANCH"
                    }
                  },
                  {
                    "decoratedText": {
                      "icon": {"materialIcon": {"name": "commit"}},
                      "topLabel": "Commit",
                      "text": "${COMMIT_SHA:0:7}"
                    }
                  }
                ]
              },
              {
                "header": "Recent Commits",
                "widgets": [{
                  "textParagraph": {
                    "text": "$COMMIT_MESSAGES"
                  }
                }]
              },
              {
                "widgets": [{
                  "buttonList": {
                    "buttons": [{
                      "text": "View Build",
                      "onClick": {
                        "openLink": {
                          "url": "$RUN_URL"
                        }
                      }
                    }]
                  }
                }]
              }]
            }
          }]
        }
        EOF
        )
        else
          CARD_CONTENT=$(cat <<EOF
        {
          "cardsV2": [{
            "cardId": "build-notification",
            "card": {
              "header": {
                "title": "$STATUS_ICON Build Failed",
                "subtitle": "$REPOSITORY"
              },
              "sections": [{
                "header": "Build Details",
                "widgets": [
                  {
                    "decoratedText": {
                      "icon": {"knownIcon": "PERSON"},
                      "topLabel": "Triggered by",
                      "text": "$ACTOR"
                    }
                  },
                  {
                    "decoratedText": {
                      "icon": {"knownIcon": "BOOKMARK"},
                      "topLabel": "Job",
                      "text": "$JOB_NAME"
                    }
                  },
                  {
                    "decoratedText": {
                      "icon": {"materialIcon": {"name": "branch_right"}},
                      "topLabel": "Branch",
                      "text": "$BRANCH"
                    }
                  },
                  {
                    "decoratedText": {
                      "icon": {"materialIcon": {"name": "commit"}},
                      "topLabel": "Commit",
                      "text": "${COMMIT_SHA:0:7}"
                    }
                  }
                ]
              },
              {
                "header": "Failure Details",
                "widgets": [{
                  "textParagraph": {
                    "text": "$FAILURE_REASON"
                  }
                }]
              },
              {
                "widgets": [{
                  "buttonList": {
                    "buttons": [{
                      "text": "View Build",
                      "onClick": {
                        "openLink": {
                          "url": "$RUN_URL"
                        }
                      }
                    }]
                  }
                }]
              }]
            }
          }]
        }
        EOF
        )
        fi

        # Send the message to Google Chat
        WEBHOOK_URL="https://chat.googleapis.com/v1/spaces/$SPACE_ID/messages?key=$GOOGLE_CHAT_TOKEN"
        
        echo "Sending notification to Google Chat..."
        RESPONSE=$(curl -s -X POST "$WEBHOOK_URL" \
          -H "Content-Type: application/json" \
          -d "$CARD_CONTENT")
        
        if [[ $? -eq 0 ]]; then
          echo "✅ Notification sent successfully!"
          echo "Response: $RESPONSE"
        else
          echo "❌ Failed to send notification"
          echo "Response: $RESPONSE"
          exit 1
        fi

branding:
  icon: 'message-circle'
  color: 'blue'